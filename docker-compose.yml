version: '3.8'

networks:
  backend:
    driver: bridge

services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    image: kaiohenricunha/eureka-server:latest
    ports:
      - '8761:8761'

  microservice1:
    build:
      context: ./microservice1
      dockerfile: Dockerfile
    image: kaiohenricunha/microservice1:latest
    ports:
      - '8080:8080'
    environment:
      - OTEL_SERVICE_NAME=microservice1
      - OTEL_TRACES_EXPORTER=logging
      - OTEL_METRICS_EXPORTER=logging
      - OTEL_LOGS_EXPORTER=logging
    depends_on:
      - eureka-server
      - rabbitmq

  microservice2:
    build:
      context: ./microservice2
      dockerfile: Dockerfile
    image: kaiohenricunha/microservice2:latest
    ports:
      - '8081:8081'
    depends_on:
      - eureka-server
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672' # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  fluentbit:
    image: fluent/fluent-bit:latest-debug
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./infra/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./infra/parsers.conf:/fluent-bit/etc/parsers.conf
    networks:
      - backend
    depends_on:
      - loki

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - backend

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - backend

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - backend

  jaeger:
    image: jaegertracing/all-in-one:1.39
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # Jaeger UI
      - "14250:14250" # gRPC
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - backend
