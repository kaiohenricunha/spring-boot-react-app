plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.kcunha.microservice2'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.0"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.3"
    }
}

dependencies {
    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Cloud dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // Database
    runtimeOnly 'com.h2database:h2'

    // Validation
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    // OpenTelemetry Core and SDK
    implementation 'io.opentelemetry:opentelemetry-api'
    implementation 'io.opentelemetry:opentelemetry-sdk'
    implementation 'io.opentelemetry:opentelemetry-sdk-extension-autoconfigure'
    implementation 'io.opentelemetry.semconv:opentelemetry-semconv:1.27.0-alpha'

    // OpenTelemetry Logging Exporter
    implementation 'io.opentelemetry:opentelemetry-exporter-logging'

    // Logging instrumentation for MDC in Logback
    runtimeOnly 'io.opentelemetry.instrumentation:opentelemetry-logback-mdc-1.0:2.8.0-alpha'

    // Retry and Context Support
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-context-support'

    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2' // Include H2 database for tests
}

test {
    useJUnitPlatform()
}
